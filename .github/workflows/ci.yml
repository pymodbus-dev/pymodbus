name: CI
on:
  push:
    branches:
      - dev
      - master
    tags:
      - v*
  pull_request:
    branches:
      - dev
  schedule:
    # Sunday at 02:10 UTC.
    - cron: '10 2 * * 0'
  workflow_dispatch:

# Test with new caching.

jobs:
  testing:
    name: ${{ matrix.os }} - ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include:
          - python: '3.8'
            run_lint: true
          - python: '3.12'
            run_doc: true
            run_lint: true
          - os: macos-latest
            run_doc: false
            run_lint: false
          - os: windows-latest
            run_doc: false
            run_lint: false

    steps:
      - name: Checkout repo from github
        uses: actions/checkout@v4.1.0

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.python }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v3.3.2
        with:
          path: ${{ github.workspace }}/venv
          key: >-
            ${{ runner.os }}-${{ matrix.python }}-venv-${{
              hashFiles('pyproject.toml') }}-${{
              hashFiles('.pre-commit-config.yaml') }}

      - name: Create venv (NEW CACHE)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv ${{ github.workspace }}/venv
          echo ${{ github.workspace }}/venv/bin >> $GITHUB_PATH
          pip install -e ".[all]"

      - name: Activate vertial environment (EXISTING CACHE)
        if: steps.cache-venv.outputs.cache-hit == 'true'
        run: |
          echo ${{ github.workspace }}/venv/bin >> $GITHUB_PATH

      - name: codespell
        if: matrix.run_doc == true
        run: |
          echo $PATH
          codespell

      - name: dcoumentation
        if: matrix.run_doc == true
        run: |
          cd doc; ./build_html

      - name: pylint
        if: matrix.run_lint == true
        run: |
          pylint --recursive=y examples pymodbus test

      - name: mypy
        if: matrix.run_lint == true
        run: |
          mypy pymodbus

      - name: precommit
        if: matrix.run_lint == true
        run: |
          pre-commit run --all-files

      - name: pytest
        run: |
          pytest -n0  -v --full-trace --timeout=1200

  analyze:
    name: Analyze Python
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: github/codeql-action/init@v2
        with:
          languages: python

      - uses: github/codeql-action/autobuild@v2

      - uses: github/codeql-action/analyze@v2

  ci_complete:
    name: ci_complete
    runs-on: ubuntu-latest
    needs:
      - analyze
      - testing
    timeout-minutes: 1
    steps:
      - run: ls
