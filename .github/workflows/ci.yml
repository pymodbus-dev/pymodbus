name: CI

on:
  push:
    branches:
      - dev
      - master
    tags:
      - v*
  pull_request:
    branches:
      - dev
  schedule:
    # Sunday at 02:10 UTC.
    - cron: '10 2 * * 0'
  workflow_dispatch:


jobs:
  integreation_test:
    name: ${{ matrix.task.name }} - ${{ matrix.os.on }} - ${{ matrix.python.version }}
    runs-on: ${{ matrix.os.on }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        task:
          - name: pylint
            cmd: pylint --recursive=y examples pymodbus test
            type: lint
          - name: codespell
            cmd: codespell
            type: lint
          - name: precommit (black, bandit, and ruff)
            cmd: pre-commit run --all-files
            type: lint
          - name: docs
            cmd: make -C doc/ html
            type: lint
          - name: mypy
            cmd: mypy pymodbus
            type: lint
          - name: pytest
            cmd: pytest --cov=pymodbus --cov=test --cov-report=term-missing --cov-report=xml -v --full-trace --timeout=20
            type: test
        os:
          - name: Linux
            on: ubuntu-latest
            lint: 'yes'
          - name: Macos
            on: macos-latest
            lint: 'no'
          - name: Windows
            on: windows-latest
            lint: 'no'
        python:
          - version: '3.8'
            lint: 'yes'
          - version: '3.9'
            lint: 'no'
          - version: '3.10'
            lint: 'no'
          - version: '3.11'
            lint: 'no'
          - version: pypy-3.8
            lint: 'no'
        exclude:
          - task:
              type: lint
            os:
              lint: 'no'
          - task:
              type: lint
            python:
              lint: 'no'
          - os:
              name: Macos
            python:
              version: pypy-3.8
          - os:
              name: Windows
            python:
              version: pypy-3.8
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up ${{ matrix.python.version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: venv create
        if: steps.setup-python.outputs.cache-hit != 'true'
        run: pip install -e . -r requirements.txt

      - name: test/lint
        run: ${{ matrix.task.cmd }}
